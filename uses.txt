# Interfaces & Classes

interface Global
    class Pool

interface IVisible
    class Nest
    class Fog
    class Fire
    class Range
    interface IUnit
        class Unit

class MoveIVisible

# Instances

## Static

    var  Group group;
    var  Nest  nest;
    var  Pool  p_;
        (level 1)

    var MoveIVisible move;
        (Fire: level 1)
        (Unit: level 4)

    var Range r;
        (Unit: level 1)

## Pool

    pool IVisible[] all;
        (Pool: level 0)

## Spawn

    spawn Unit in global:p:all;     (x2)
        (level 1)

    spawn Unit in global:p:all;
        (Nest: level 4)

    spawn Fire in global:p:all
        (Range: level 5)

    spawn Fog in global:p:all
        (Unit: level 5)

## New

## Iterator

    // collision
    loop (IVisible*)vis in global:p:all
        (level 3)

    // move / follow
    loop (IUnit*)u in global:p:all
        loop (IUnit*)u in global:p:all
        (level 5)
            (level 6)

    // focus / group
    loop (Unit*)u in global:p:all
        (level 4)

    // select
    loop (Unit*)u in global:p:all
        (Group: level 6)

## Weak

    var Pool* p;
        (Global: level 0)

    var IVisible*[100] objs;
        var IUnit* u = (IUnit*) vis;    // ranges
        var IVisible* vis1 = objs[i];
            var IVisible* vis2 = objs[j];
        (level 3)
            (level 4)
            (level 4)
                (level 5)

    var IUnit* enemy;   // what to follow
        (level 5)

    var IVisible* vis;  // what to move
        (MoveIVisible: level 0)

    var IVisible* oth;  // collision w/ unit?
        (MoveIVisible: level 3)

    var IVisible* vis_range;    // range visible
        (IUnit: level 0)

    var IUnit* oth;     // collision with unit
        (Fire: level 2)

    var IUnit* unit;    // parent unit
        (Range: level 0)

    var IUnit* oth;     // collision with unit
        (Range: level 3)

    var IUnit* oth;     // collision with unit
        (Unit: level 3)

    var IVisible* vis;  // vis to follow
        (Unit: level 2)

    ### False positives (`:=Â´)

        global:p := &p_;    // same scope as possible users
            (level 1)

        objs[objs_n] := vis;
            objs[objs_n] := u:vis_range;
            (level 4)
                (level 5)

        enemy := u;         // tight path
            (level 8)

        var IVisible* vis := await this.go_collide
                             until vis:team != this.team;
            (Unit: level 3) // tight path but w/ until loop

        var IVisible* vis_ = await go_follow;
                vis := vis_;
            (Unit: level 4)
                    // TODO: tight path to "watching vis"

## Watching

        watching oth do     // fog on enemy position
            (Unit: level 4)

        watching vis do     // following
            (Unit: level 6)

        watching oth do     // timeout to fire
            (Range: level 4)
