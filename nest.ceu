class Nest with
    var _SDL_Rect   rect;
    var _SDL_Color  clr;
    var int         cost;

    event void      go_build;
do
    clr.r = 50;
    clr.g = 50;
    clr.b = 50;
    rect.x = 400;
    rect.y = 200;
    rect.w = 100;
    rect.h = 100;
    cost = 50;

    var int tot_max = 25;   // bar max
    var int tot_cur = 0;    // bar ongoing

    par/or do
        // spawn units on request
        loop do
            finalize with
                tot_cur = 0;
            end

            await this.go_build;

            if global:money >= this.cost then
                global:money = global:money - this.cost;
                loop i in tot_max do
                    tot_cur = tot_cur + 1;
                    await 200ms;
                end

                // SPAWN UNIT
                spawn Unit in global:all with
                    this.id     = _VIS_UNIT1;
                    this.team   = 1;
                    this.tex    = _TEX_STORMTROOPER;
                    this.life   =  10;
                    this.speed  = 100;
                    this.rect.x =  10;
                    this.rect.y =  10;
                    this.rect.w =  32;
                    this.rect.h =  48;
                end;
            else
                loop i in 3 do
                    this.clr.r = 255;
                    await 100ms;
                    this.clr.r = 100;
                    await 100ms;
                end
            end
        end
    with
        every SDL_REDRAW do
            _SDL_SetRenderDrawColor(_REN, clr.r,clr.g,clr.b,255);
            _SDL_RenderFillRect(_REN, &this.rect);

            if tot_cur > 0 then
                _SDL_SetRenderDrawColor(_REN, 200,200,200,255);
                var _SDL_Rect r;
                    r.x = this.rect.x + 9;
                    r.y = this.rect.y + this.rect.h - 11;
                    r.w = tot_max;
                    r.h = 4;
                _SDL_RenderDrawRect(_REN, &r);
                    r.w = tot_cur;
                _SDL_RenderFillRect(_REN, &r);
            end
        end
    end
end
